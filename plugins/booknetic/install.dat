{"status":"ok","sql":"DROP TABLE IF EXISTS `{tableprefix}appearance`;
DROP TABLE IF EXISTS `{tableprefix}appointment_custom_data`;
DROP TABLE IF EXISTS `{tableprefix}appointment_extras`;
DROP TABLE IF EXISTS `{tableprefix}appointment_customers`;
DROP TABLE IF EXISTS `{tableprefix}appointments`;
DROP TABLE IF EXISTS `{tableprefix}coupons`;
DROP TABLE IF EXISTS `{tableprefix}customers`;
DROP TABLE IF EXISTS `{tableprefix}form_input_choices`;
DROP TABLE IF EXISTS `{tableprefix}form_inputs`;
DROP TABLE IF EXISTS `{tableprefix}forms`;
DROP TABLE IF EXISTS `{tableprefix}holidays`;
DROP TABLE IF EXISTS `{tableprefix}locations`;
DROP TABLE IF EXISTS `{tableprefix}notifications`;
DROP TABLE IF EXISTS `{tableprefix}special_days`;
DROP TABLE IF EXISTS `{tableprefix}timesheet`;
DROP TABLE IF EXISTS `{tableprefix}service_staff`;
DROP TABLE IF EXISTS `{tableprefix}service_categories`;
DROP TABLE IF EXISTS `{tableprefix}service_extras`;
DROP TABLE IF EXISTS `{tableprefix}services`;
DROP TABLE IF EXISTS `{tableprefix}staff`;

CREATE TABLE `{tableprefix}appearance` (
  `id` int(11) NOT NULL,
  `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `is_default` tinyint(4) DEFAULT NULL,
  `colors` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `{tableprefix}appearance` (`id`, `name`, `is_default`, `colors`) VALUES
(1, 'Default style', 1, '{\"panel\":\"#292d32\",\"primary\":\"#6c70dc\",\"primary_txt\":\"#ffffff\",\"active_steps\":\"#4fbf65\",\"active_steps_txt\":\"#4fbf65\",\"compleated_steps\":\"#6c70dc\",\"compleated_steps_txt\":\"#ffffff\",\"other_steps\":\"#4d545a\",\"other_steps_txt\":\"#626c76\",\"title\":\"#292d32\",\"border\":\"#53d56c\"}'),
(2, 'Brown style', 0, '{\"panel\":\"#a39789\",\"primary\":\"#a39789\",\"primary_txt\":\"#ffffff\",\"active_steps\":\"#838383\",\"active_steps_txt\":\"#ffffff\",\"compleated_steps\":\"#505050\",\"compleated_steps_txt\":\"#ffffff\",\"other_steps\":\"#c7c0b6\",\"other_steps_txt\":\"#c7c0b7\",\"title\":\"#292d32\",\"border\":\"#a39789\"}'),
(3, 'Red style', 0, '{\"panel\":\"#fb5557\",\"primary\":\"#fb5557\",\"primary_txt\":\"#ffffff\",\"active_steps\":\"#969595\",\"active_steps_txt\":\"#ffffff\",\"compleated_steps\":\"#505050\",\"compleated_steps_txt\":\"#ffffff\",\"other_steps\":\"#fd999b\",\"other_steps_txt\":\"#fd999a\",\"title\":\"#292d32\",\"border\":\"#53d56c\"}'),
(4, 'Green style', 0, '{\"panel\":\"#22bf6c\",\"primary\":\"#22bf6c\",\"primary_txt\":\"#ffffff\",\"active_steps\":\"#c8c8c8\",\"active_steps_txt\":\"#ffffff\",\"compleated_steps\":\"#f7b732\",\"compleated_steps_txt\":\"#ffffff\",\"other_steps\":\"#7ad8a6\",\"other_steps_txt\":\"#79d7a6\",\"title\":\"#292d32\",\"border\":\"#53d56c\"}'),
(5, 'Blue style', 0, '{\"panel\":\"#2079fb\",\"primary\":\"#2079fb\",\"primary_txt\":\"#ffffff\",\"active_steps\":\"#b0b0b0\",\"active_steps_txt\":\"#ffffff\",\"compleated_steps\":\"#4ebf65\",\"compleated_steps_txt\":\"#ffffff\",\"other_steps\":\"#79aefc\",\"other_steps_txt\":\"#78adfc\",\"title\":\"#292d32\",\"border\":\"#53d56c\"}'),
(6, 'Purple style', 0, '{\"panel\":\"#6c70dd\",\"primary\":\"#6c70dd\",\"primary_txt\":\"#ffffff\",\"active_steps\":\"#acacac\",\"active_steps_txt\":\"#ffffff\",\"compleated_steps\":\"#4ebf65\",\"compleated_steps_txt\":\"#ffffff\",\"other_steps\":\"#a6aaeb\",\"other_steps_txt\":\"#a6a8ea\",\"title\":\"#292d32\",\"border\":\"#8388fc\"}'),
(7, 'Pink style', 0, '{\"panel\":\"#db598f\",\"primary\":\"#db598f\",\"primary_txt\":\"#ffffff\",\"active_steps\":\"#a8a8a8\",\"active_steps_txt\":\"#ffffff\",\"compleated_steps\":\"#505050\",\"compleated_steps_txt\":\"#ffffff\",\"other_steps\":\"#ea9bbb\",\"other_steps_txt\":\"#e99abb\",\"title\":\"#292d32\",\"border\":\"#fea7cc\"}');

CREATE TABLE `{tableprefix}appointments` (
  `id` int(11) NOT NULL,
  `recurring_id` int(11) DEFAULT NULL,
  `location_id` int(11) DEFAULT NULL,
  `service_id` int(11) DEFAULT NULL,
  `staff_id` int(11) DEFAULT NULL,
  `date` date DEFAULT NULL,
  `start_time` time DEFAULT NULL,
  `duration` int(11) DEFAULT NULL,
  `extras_duration` int(11) DEFAULT NULL,
  `buffer_before` int(11) DEFAULT NULL,
  `buffer_after` int(11) DEFAULT NULL,
  `send_notifications` tinyint(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}appointment_customers` (
  `id` int(11) NOT NULL,
  `appointment_id` int(11) DEFAULT NULL,
  `customer_id` int(11) DEFAULT NULL,
  `status` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `number_of_customers` int(11) DEFAULT NULL,
  `service_amount` float DEFAULT NULL,
  `extras_amount` float DEFAULT NULL,
  `discount` float DEFAULT NULL,
  `paid_amount` float DEFAULT NULL,
  `payment_method` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `payment_status` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `coupon_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}appointment_custom_data` (
  `id` int(11) NOT NULL,
  `appointment_id` int(11) DEFAULT NULL,
  `customer_id` int(11) DEFAULT NULL,
  `form_input_id` int(11) DEFAULT NULL,
  `input_value` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `input_file_name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}appointment_extras` (
  `id` int(11) NOT NULL,
  `appointment_id` int(11) DEFAULT NULL,
  `customer_id` int(11) DEFAULT NULL,
  `extra_id` int(11) DEFAULT NULL,
  `quantity` int(11) DEFAULT NULL,
  `price` float DEFAULT NULL,
  `duration` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}coupons` (
  `id` int(11) NOT NULL,
  `type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `code` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,
  `discount_type` varchar(15) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `discount` float DEFAULT NULL,
  `series_count` int(11) DEFAULT NULL,
  `services` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `staff` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `start_date` date DEFAULT NULL,
  `end_date` date DEFAULT NULL,
  `usage_limit` int(11) DEFAULT NULL,
  `once_per_customer` tinyint(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}customers` (
  `id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `first_name` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `last_name` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `phone_number` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `email` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `birthdate` date DEFAULT NULL,
  `notes` varchar(750) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `profile_image` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `gender` varchar(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}forms` (
  `id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `service_ids` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}form_inputs` (
  `id` int(11) NOT NULL,
  `form_id` int(11) DEFAULT NULL,
  `type` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `label` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `help_text` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `is_required` tinyint(4) DEFAULT NULL,
  `options` varchar(1500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `order_number` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}form_input_choices` (
  `id` int(11) NOT NULL,
  `form_input_id` int(11) DEFAULT NULL,
  `title` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `order_number` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}holidays` (
  `id` int(11) NOT NULL,
  `date` date DEFAULT NULL,
  `service_id` int(11) DEFAULT NULL,
  `staff_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}locations` (
  `id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `image` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `address` varchar(150) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `phone_number` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `notes` varchar(750) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `latitude` varchar(25) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `longitude` varchar(25) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}notifications` (
  `id` int(11) NOT NULL,
  `action` varchar(75) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `send_to` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `subject` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `body` text COLLATE utf8mb4_unicode_ci,
  `is_active` tinyint(4) DEFAULT NULL,
  `order_by` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `{tableprefix}notifications` (`id`, `action`, `send_to`, `subject`, `body`, `is_active`, `order_by`) VALUES
(1, 'appointment_approved', 'customer', NULL, NULL, 0, 3),
(2, 'appointment_pending', 'customer', NULL, NULL, 0, 4),
(3, 'appointment_rejected', 'customer', NULL, NULL, 0, 5),
(4, 'appointment_canceled', 'customer', NULL, NULL, 0, 6),
(5, 'appointment_approved', 'staff', NULL, NULL, 0, 13),
(6, 'appointment_pending', 'staff', NULL, NULL, 0, 14),
(7, 'appointment_rejected', 'staff', NULL, NULL, 0, 15),
(8, 'appointment_canceled', 'staff', NULL, NULL, 0, 16),
(9, 'new_booking', 'customer', NULL, NULL, 0, 1),
(10, 'new_booking', 'staff', NULL, NULL, 0, 11),
(11, 'edit_booking', 'staff', NULL, NULL, 0, 12),
(12, 'edit_booking', 'customer', NULL, NULL, 0, 2);

CREATE TABLE `{tableprefix}services` (
  `id` int(11) NOT NULL,
  `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `price` float(10,2) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  `is_visible` tinyint(4) DEFAULT NULL,
  `duration` int(11) DEFAULT NULL,
  `timeslot_length` int(11) DEFAULT NULL,
  `buffer_before` int(11) DEFAULT NULL,
  `buffer_after` int(11) DEFAULT NULL,
  `notes` varchar(750) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `image` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `is_recurring` tinyint(4) DEFAULT NULL,
  `full_period_type` varchar(30) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `full_period_value` int(11) DEFAULT NULL,
  `repeat_type` varchar(30) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `recurring_payment_type` varchar(40) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `repeat_frequency` int(11) DEFAULT NULL,
  `is_fix_time` tinyint(4) DEFAULT NULL,
  `min_capacity` int(11) DEFAULT NULL,
  `max_capacity` int(11) DEFAULT NULL,
  `color` varchar(10) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}service_categories` (
  `id` int(11) NOT NULL,
  `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `parent_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}service_extras` (
  `id` int(11) NOT NULL,
  `service_id` int(11) DEFAULT NULL,
  `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `image` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `price` float(10,2) DEFAULT NULL,
  `duration` int(11) DEFAULT NULL,
  `max_quantity` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}service_staff` (
  `id` int(11) NOT NULL,
  `service_id` int(11) DEFAULT NULL,
  `staff_id` int(11) DEFAULT NULL,
  `price` float(10,2) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}special_days` (
  `id` int(11) NOT NULL,
  `date` date DEFAULT NULL,
  `timesheet` varchar(750) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `service_id` int(11) DEFAULT NULL,
  `staff_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}staff` (
  `id` int(11) NOT NULL,
  `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `email` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `phone_number` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `about` varchar(750) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `profile_image` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `locations` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `{tableprefix}timesheet` (
  `id` int(11) NOT NULL,
  `service_id` int(11) DEFAULT NULL,
  `staff_id` int(11) DEFAULT NULL,
  `timesheet` varchar(1500) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `{tableprefix}timesheet` (`id`, `service_id`, `staff_id`, `timesheet`) VALUES
(9, NULL, NULL, '[{\"day_off\":0,\"start\":\"09:00\",\"end\":\"18:00\",\"breaks\":[]},{\"day_off\":0,\"start\":\"09:00\",\"end\":\"18:00\",\"breaks\":[]},{\"day_off\":0,\"start\":\"09:00\",\"end\":\"18:00\",\"breaks\":[]},{\"day_off\":0,\"start\":\"09:00\",\"end\":\"18:00\",\"breaks\":[]},{\"day_off\":0,\"start\":\"09:00\",\"end\":\"18:00\",\"breaks\":[]},{\"day_off\":0,\"start\":\"09:00\",\"end\":\"18:00\",\"breaks\":[]},{\"day_off\":0,\"start\":\"09:00\",\"end\":\"18:00\",\"breaks\":[]}]');

ALTER TABLE `{tableprefix}appearance` ADD PRIMARY KEY (`id`);


ALTER TABLE `{tableprefix}appointments` ADD PRIMARY KEY (`id`), ADD KEY `location_id` (`location_id`), ADD KEY `service_id` (`service_id`), ADD KEY `staff_id` (`staff_id`);

ALTER TABLE `{tableprefix}appointment_customers` ADD PRIMARY KEY (`id`), ADD KEY `{tableprefix}appointment_customers_ibfk_1` (`appointment_id`), ADD KEY `{tableprefix}appointment_customers_ibfk_2` (`customer_id`);

ALTER TABLE `{tableprefix}appointment_custom_data` ADD PRIMARY KEY (`id`), ADD KEY `appointment_id` (`appointment_id`), ADD KEY `customer_id` (`customer_id`), ADD KEY `form_input_id` (`form_input_id`);

ALTER TABLE `{tableprefix}appointment_extras` ADD PRIMARY KEY (`id`), ADD KEY `appointment_id` (`appointment_id`), ADD KEY `customer_id` (`customer_id`), ADD KEY `extra_id` (`extra_id`);

ALTER TABLE `{tableprefix}coupons` ADD PRIMARY KEY (`id`);

ALTER TABLE `{tableprefix}customers` ADD PRIMARY KEY (`id`);

ALTER TABLE `{tableprefix}forms` ADD PRIMARY KEY (`id`);

ALTER TABLE `{tableprefix}form_inputs` ADD PRIMARY KEY (`id`), ADD KEY `{tableprefix}form_inputs_ibfk_1` (`form_id`);

ALTER TABLE `{tableprefix}form_input_choices` ADD PRIMARY KEY (`id`), ADD KEY `form_input_id` (`form_input_id`);

ALTER TABLE `{tableprefix}holidays` ADD PRIMARY KEY (`id`), ADD KEY `service_id` (`service_id`), ADD KEY `staff_id` (`staff_id`);

ALTER TABLE `{tableprefix}locations` ADD PRIMARY KEY (`id`);

ALTER TABLE `{tableprefix}notifications` ADD PRIMARY KEY (`id`);

ALTER TABLE `{tableprefix}services` ADD PRIMARY KEY (`id`);

ALTER TABLE `{tableprefix}service_categories` ADD PRIMARY KEY (`id`);

ALTER TABLE `{tableprefix}service_extras` ADD PRIMARY KEY (`id`), ADD KEY `service_id` (`service_id`);

ALTER TABLE `{tableprefix}service_staff` ADD PRIMARY KEY (`id`), ADD KEY `service_id` (`service_id`), ADD KEY `staff_id` (`staff_id`);

ALTER TABLE `{tableprefix}special_days` ADD PRIMARY KEY (`id`), ADD KEY `service_id` (`service_id`), ADD KEY `staff_id` (`staff_id`);

ALTER TABLE `{tableprefix}staff` ADD PRIMARY KEY (`id`);

ALTER TABLE `{tableprefix}timesheet` ADD PRIMARY KEY (`id`), ADD KEY `service_id` (`service_id`), ADD KEY `staff_id` (`staff_id`);

ALTER TABLE `{tableprefix}appearance` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}appointments` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}appointment_customers` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}appointment_custom_data` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}appointment_extras` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}coupons` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}customers` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}forms` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}form_inputs` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}form_input_choices` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}holidays` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}locations` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}notifications` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

ALTER TABLE `{tableprefix}services` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}service_categories` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}service_extras` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}service_staff` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}special_days` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}staff` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}timesheet` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

ALTER TABLE `{tableprefix}appointments` ADD CONSTRAINT `{tableprefix}appointments_ibfk_1` FOREIGN KEY (`location_id`) REFERENCES `{tableprefix}locations` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}appointments_ibfk_2` FOREIGN KEY (`service_id`) REFERENCES `{tableprefix}services` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}appointments_ibfk_3` FOREIGN KEY (`staff_id`) REFERENCES `{tableprefix}staff` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}appointment_customers` ADD CONSTRAINT `{tableprefix}appointment_customers_ibfk_1` FOREIGN KEY (`appointment_id`) REFERENCES `{tableprefix}appointments` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}appointment_customers_ibfk_2` FOREIGN KEY (`customer_id`) REFERENCES `{tableprefix}customers` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}appointment_custom_data` ADD CONSTRAINT `{tableprefix}appointment_custom_data_ibfk_1` FOREIGN KEY (`appointment_id`) REFERENCES `{tableprefix}appointments` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}appointment_custom_data_ibfk_2` FOREIGN KEY (`customer_id`) REFERENCES `{tableprefix}customers` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}appointment_custom_data_ibfk_3` FOREIGN KEY (`form_input_id`) REFERENCES `{tableprefix}form_inputs` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}appointment_extras` ADD CONSTRAINT `{tableprefix}appointment_extras_ibfk_1` FOREIGN KEY (`appointment_id`) REFERENCES `{tableprefix}appointments` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}appointment_extras_ibfk_2` FOREIGN KEY (`customer_id`) REFERENCES `{tableprefix}customers` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}appointment_extras_ibfk_3` FOREIGN KEY (`extra_id`) REFERENCES `{tableprefix}service_extras` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}form_inputs` ADD CONSTRAINT `{tableprefix}form_inputs_ibfk_1` FOREIGN KEY (`form_id`) REFERENCES `{tableprefix}forms` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE `{tableprefix}form_input_choices` ADD CONSTRAINT `{tableprefix}form_input_choices_ibfk_1` FOREIGN KEY (`form_input_id`) REFERENCES `{tableprefix}form_inputs` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}holidays` ADD CONSTRAINT `{tableprefix}holidays_ibfk_1` FOREIGN KEY (`service_id`) REFERENCES `{tableprefix}services` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}holidays_ibfk_2` FOREIGN KEY (`staff_id`) REFERENCES `{tableprefix}staff` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}service_extras` ADD CONSTRAINT `{tableprefix}service_extras_ibfk_1` FOREIGN KEY (`service_id`) REFERENCES `{tableprefix}services` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}service_staff` ADD CONSTRAINT `{tableprefix}service_staff_ibfk_1` FOREIGN KEY (`service_id`) REFERENCES `{tableprefix}services` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}service_staff_ibfk_2` FOREIGN KEY (`staff_id`) REFERENCES `{tableprefix}staff` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}special_days` ADD CONSTRAINT `{tableprefix}special_days_ibfk_1` FOREIGN KEY (`service_id`) REFERENCES `{tableprefix}services` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}special_days_ibfk_2` FOREIGN KEY (`staff_id`) REFERENCES `{tableprefix}staff` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `{tableprefix}timesheet` ADD CONSTRAINT `{tableprefix}timesheet_ibfk_1` FOREIGN KEY (`service_id`) REFERENCES `{tableprefix}services` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION, ADD CONSTRAINT `{tableprefix}timesheet_ibfk_2` FOREIGN KEY (`staff_id`) REFERENCES `{tableprefix}staff` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE `{tableprefix}appointments` ADD COLUMN `google_event_id` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL;
ALTER TABLE `{tableprefix}appointments` ADD COLUMN `recurring_payment_type` varchar(40) COLLATE utf8mb4_unicode_ci DEFAULT NULL;

ALTER TABLE `{tableprefix}notifications` ADD COLUMN `type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL;

UPDATE `{tableprefix}notifications` SET `type`='email';

INSERT INTO `{tableprefix}notifications` (`id`, `action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`) VALUES
(13, 'appointment_approved', 'customer', NULL, NULL, 0, 3, 'sms'),
(14, 'appointment_pending', 'customer', NULL, NULL, 0, 4, 'sms'),
(15, 'appointment_rejected', 'customer', NULL, NULL, 0, 5, 'sms'),
(16, 'appointment_canceled', 'customer', NULL, NULL, 0, 6, 'sms'),
(17, 'appointment_approved', 'staff', NULL, NULL, 0, 13, 'sms'),
(18, 'appointment_pending', 'staff', NULL, NULL, 0, 14, 'sms'),
(19, 'appointment_rejected', 'staff', NULL, NULL, 0, 15, 'sms'),
(20, 'appointment_canceled', 'staff', NULL, NULL, 0, 16, 'sms'),
(21, 'new_booking', 'customer', NULL, NULL, 0, 1, 'sms'),
(22, 'new_booking', 'staff', NULL, NULL, 0, 11, 'sms'),
(23, 'edit_booking', 'staff', NULL, NULL, 0, 12, 'sms'),
(24, 'edit_booking', 'customer', NULL, NULL, 0, 2, 'sms');

ALTER TABLE `{tableprefix}services` ADD COLUMN `deposit_type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL;
ALTER TABLE `{tableprefix}services` ADD COLUMN `deposit` float(10, 2) DEFAULT NULL;

ALTER TABLE `{tableprefix}service_staff` ADD COLUMN `deposit_type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT NULL;
ALTER TABLE `{tableprefix}service_staff` ADD COLUMN `deposit` float(10, 2) DEFAULT NULL;

ALTER TABLE `{tableprefix}staff` ADD COLUMN `google_access_token` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL;
ALTER TABLE `{tableprefix}staff` ADD COLUMN `google_calendar_id` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL;
ALTER TABLE `{tableprefix}staff` ADD COLUMN `google_calendar_time_zone` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL;
ALTER TABLE {tableprefix}services ADD COLUMN is_active tinyint(1) NULL;
UPDATE {tableprefix}services SET is_active=1;

ALTER TABLE {tableprefix}staff ADD COLUMN is_active tinyint(1) NULL;
UPDATE {tableprefix}staff SET is_active=1;

ALTER TABLE {tableprefix}locations ADD COLUMN is_active tinyint(1) NULL;
UPDATE {tableprefix}locations SET is_active=1;

ALTER TABLE {tableprefix}appointment_customers ADD COLUMN created_at timestamp NULL;ALTER TABLE `{tableprefix}notifications` ADD COLUMN `reminder_time` int NULL;
ALTER TABLE `{tableprefix}appointments` ADD COLUMN `reminder_status` varchar(60) COLLATE utf8mb4_unicode_ci DEFAULT NULL;

INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`, `reminder_time`) VALUES ('reminder_before', 'customer', '', '', 0, 7, 'email', NULL);
INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`, `reminder_time`) VALUES ('reminder_after', 'customer', '', '', 0, 8, 'email', NULL);
INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`, `reminder_time`) VALUES ('reminder_before', 'staff', '', '', 0, 17, 'email', NULL);
INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`, `reminder_time`) VALUES ('reminder_after', 'staff', '', '', 0, 18, 'email', NULL);
INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`, `reminder_time`) VALUES ('reminder_before', 'customer', '', '', 0, 7, 'sms', NULL);
INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`, `reminder_time`) VALUES ('reminder_after', 'customer', '', '', 0, 8, 'sms', NULL);
INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`, `reminder_time`) VALUES ('reminder_before', 'staff', '', '', 0, 17, 'sms', NULL);
INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`, `reminder_time`) VALUES ('reminder_after', 'staff', '', '', 0, 18, 'sms', NULL);
ALTER TABLE `{tableprefix}services` ADD COLUMN hide_price tinyint(1) NULL;
ALTER TABLE `{tableprefix}services` ADD COLUMN hide_duration tinyint(1) NULL;ALTER TABLE `{tableprefix}appearance` ADD COLUMN `height` int NULL;
ALTER TABLE `{tableprefix}appearance` ADD COLUMN `fontfamily` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL;

UPDATE `{tableprefix}appearance` SET `height`=600, `fontfamily`='Poppins';

UPDATE `{tableprefixbase}options` SET `option_name`='bkntc_show_step_service_extras' where `option_name`='bkntc_show_service_extras_step';
UPDATE `{tableprefixbase}options` SET `option_name`='bkntc_show_step_location', `option_value`=IF(`option_value`='on', 'off', 'on') where `option_name`='bkntc_hide_locations_step';
UPDATE `{tableprefixbase}options` SET `option_name`='bkntc_show_step_staff', `option_value`=IF(`option_value`='on', 'off', 'on') where `option_name`='bkntc_hide_staff_step';
UPDATE `{tableprefixbase}options` SET `option_name`='bkntc_show_step_confirm_details', `option_value`=IF(`option_value`='on', 'off', 'on') where `option_name`='hide_confirm_details_step';
ALTER TABLE `{tableprefix}service_extras` ADD COLUMN `is_active` tinyint(1) NULL;
UPDATE `{tableprefix}service_extras` SET `is_active`=1;ALTER TABLE `{tableprefix}appointments` ADD COLUMN `zoom_meeting_data` varchar(1250) COLLATE utf8mb4_unicode_ci DEFAULT NULL;

ALTER TABLE `{tableprefix}services` ADD COLUMN `activate_zoom` tinyint(1) NULL;
UPDATE `{tableprefix}services` SET `activate_zoom`=0;

ALTER TABLE `{tableprefix}staff` ADD COLUMN `zoom_user` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL;
ALTER TABLE `{tableprefix}service_extras` ADD COLUMN `hide_duration` tinyint(1) NULL;

ALTER TABLE `{tableprefix}service_extras` ADD COLUMN `hide_price` tinyint(1) NULL;

UPDATE `{tableprefix}service_extras` SET `hide_duration`=0, `hide_price`=0;INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`) VALUES
('cp_access', 'customer', NULL, NULL, 0, 19, 'sms'),
('cp_access', 'customer', NULL, NULL, 0, 19, 'email'),
('cp_access', 'staff', NULL, NULL, 0, 19, 'sms'),
('cp_access', 'staff', NULL, NULL, 0, 19, 'email');DROP TABLE IF EXISTS `{tableprefix}invoices`;
CREATE TABLE `{tableprefix}invoices` (
  `id` int(11) NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` text COLLATE utf8mb4_unicode_ci,
  `notifications` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
ALTER TABLE `{tableprefix}invoices` ADD PRIMARY KEY (`id`);
ALTER TABLE `{tableprefix}invoices` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1;DROP TABLE IF EXISTS `{tableprefix}staff_busy_slots`;

CREATE TABLE `{tableprefix}staff_busy_slots` (
  `id` int(11) NOT NULL,
  `staff_id` int(11) DEFAULT NULL,
  `date` date DEFAULT NULL,
  `start_time` time DEFAULT NULL,
  `duration` int(11) DEFAULT NULL,
  `google_event_id` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

ALTER TABLE `{tableprefix}staff_busy_slots` ADD PRIMARY KEY (`id`);
ALTER TABLE `{tableprefix}staff_busy_slots` MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
INSERT INTO `{tableprefix}notifications` (`action`, `send_to`, `subject`, `body`, `is_active`, `order_by`, `type`) VALUES
('new_booking', 'customer', NULL, NULL, 0, 1, 'whatsapp'),
('edit_booking', 'customer', NULL, NULL, 0, 2, 'whatsapp'),
('appointment_approved', 'customer', NULL, NULL, 0, 3, 'whatsapp'),
('appointment_pending', 'customer', NULL, NULL, 0, 4, 'whatsapp'),
('appointment_rejected', 'customer', NULL, NULL, 0, 5, 'whatsapp'),
('appointment_canceled', 'customer', NULL, NULL, 0, 6, 'whatsapp'),
('reminder_before', 'customer', NULL, NULL, 0, 7, 'whatsapp'),
('reminder_after', 'customer', NULL, NULL, 0, 8, 'whatsapp'),
('cp_access', 'customer', NULL, NULL, 0, 19, 'whatsapp'),
('new_booking', 'staff', NULL, NULL, 0, 11, 'whatsapp'),
('edit_booking', 'staff', NULL, NULL, 0, 12, 'whatsapp'),
('appointment_approved', 'staff', NULL, NULL, 0, 13, 'whatsapp'),
('appointment_pending', 'staff', NULL, NULL, 0, 14, 'whatsapp'),
('appointment_rejected', 'staff', NULL, NULL, 0, 15, 'whatsapp'),
('appointment_canceled', 'staff', NULL, NULL, 0, 16, 'whatsapp'),
('reminder_before', 'staff', NULL, NULL, 0, 17, 'whatsapp'),
('reminder_after', 'staff', NULL, NULL, 0, 18, 'whatsapp'),
('cp_access', 'staff', NULL, NULL, 0, 19, 'whatsapp');
ALTER TABLE `{tableprefix}appearance` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}appointments` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}coupons` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}customers` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}forms` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}holidays` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}invoices` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}locations` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}notifications` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}service_categories` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}services` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}special_days` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}staff` ADD COLUMN `tenant_id` int NULL;
ALTER TABLE `{tableprefix}timesheet` ADD COLUMN `tenant_id` int NULL;

ALTER TABLE `{tableprefix}appearance` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}appointments` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}coupons` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}customers` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}forms` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}holidays` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}invoices` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}locations` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}notifications` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}service_categories` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}services` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}special_days` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}staff` ADD KEY `tenant_id` (`tenant_id`);
ALTER TABLE `{tableprefix}timesheet` ADD KEY `tenant_id` (`tenant_id`);

DELETE FROM {tableprefix}service_staff WHERE id IN (SELECT x.id FROM (SELECT id FROM {tableprefix}service_staff a1 WHERE id>(SELECT MIN(a2.id) FROM {tableprefix}service_staff a2  WHERE a1.service_id=a2.service_id and a1.staff_id=a2.staff_id))x);
","saas_url":""}